%!PS-Adobe-2.0 EPSF-2.0
%%Title: extinction_norm.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Tue Feb 21 11:44:46 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 276
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -110 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 276 lineto 50 276 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (extinction_norm.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (chihuan)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb 21 11:44:46 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 330 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6802.00 4534.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1617 1056 M
63 0 V
4527 0 R
-63 0 V
stroke
1419 1056 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 0)]
] -110.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1617 1530 M
63 0 V
4527 0 R
-63 0 V
stroke
1419 1530 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 0.2)]
] -110.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1617 2004 M
63 0 V
4527 0 R
-63 0 V
stroke
1419 2004 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 0.4)]
] -110.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1617 2478 M
63 0 V
4527 0 R
-63 0 V
stroke
1419 2478 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 0.6)]
] -110.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1617 2952 M
63 0 V
4527 0 R
-63 0 V
stroke
1419 2952 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 0.8)]
] -110.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1617 3426 M
63 0 V
4527 0 R
-63 0 V
stroke
1419 3426 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 1)]
] -110.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1617 3900 M
63 0 V
4527 0 R
-63 0 V
stroke
1419 3900 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 1.2)]
] -110.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1617 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
1617 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 0)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2177 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
2177 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 5)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2737 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
2737 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 10)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3296 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
3296 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 15)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3856 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
3856 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 20)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4416 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
4416 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 25)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4976 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
4976 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 30)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5535 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
5535 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 35)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6095 1056 M
0 63 V
0 3018 R
0 -63 V
stroke
6095 726 M
[ [(Helvetica) 330.0 0.0 true true 0 ( 40)]
] -110.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1617 4137 N
0 -3081 V
4590 0 V
0 3081 V
-4590 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
264 2596 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 330.0 0.0 true true 0 (normalised transmission)]
] -110.0 MCshow
grestore
LTb
LCb setrgbcolor
3912 231 M
[ [(Helvetica) 330.0 0.0 true true 0 (time \(ms\))]
] -110.0 MCshow
LTb
% Begin plot #1
0.500 UP
1.000 UL
LTb
1.00 0.00 0.00 C /Helvetica findfont 330 scalefont setfont
/vshift -110 def
1673 2443 M
0 122 V
-31 -122 R
62 0 V
-62 122 R
62 0 V
25 21 R
0 132 V
-31 -132 R
62 0 V
-62 132 R
62 0 V
25 -178 R
0 122 V
-31 -122 R
62 0 V
-62 122 R
62 0 V
25 -42 R
0 139 V
-31 -139 R
62 0 V
-62 139 R
62 0 V
25 -107 R
0 134 V
-31 -134 R
62 0 V
-62 134 R
62 0 V
25 -77 R
0 139 V
-31 -139 R
62 0 V
-62 139 R
62 0 V
25 -158 R
0 122 V
-31 -122 R
62 0 V
-62 122 R
62 0 V
25 -33 R
0 138 V
-31 -138 R
62 0 V
-62 138 R
62 0 V
25 -150 R
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
25 -181 R
0 128 V
-31 -128 R
62 0 V
-62 128 R
62 0 V
25 -74 R
0 143 V
-31 -143 R
62 0 V
-62 143 R
62 0 V
25 80 R
0 140 V
-31 -140 R
62 0 V
-62 140 R
62 0 V
25 -191 R
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
25 -208 R
0 143 V
-31 -143 R
62 0 V
-62 143 R
62 0 V
25 -163 R
0 133 V
-31 -133 R
62 0 V
-62 133 R
62 0 V
25 -64 R
0 159 V
-31 -159 R
62 0 V
-62 159 R
62 0 V
25 -42 R
0 128 V
-31 -128 R
62 0 V
-62 128 R
62 0 V
25 -184 R
0 147 V
-31 -147 R
62 0 V
stroke 2656 2988 M
-62 147 R
62 0 V
25 -10 R
0 143 V
-31 -143 R
62 0 V
-62 143 R
62 0 V
25 -247 R
0 153 V
-31 -153 R
62 0 V
-62 153 R
62 0 V
24 -79 R
0 153 V
-31 -153 R
62 0 V
-62 153 R
62 0 V
25 -50 R
0 158 V
-31 -158 R
62 0 V
-62 158 R
62 0 V
25 -147 R
0 149 V
-31 -149 R
62 0 V
-62 149 R
62 0 V
25 -275 R
0 152 V
-31 -152 R
62 0 V
-62 152 R
62 0 V
25 -110 R
0 140 V
-31 -140 R
62 0 V
-62 140 R
62 0 V
25 -73 R
0 145 V
-31 -145 R
62 0 V
-62 145 R
62 0 V
25 -74 R
0 151 V
-31 -151 R
62 0 V
-62 151 R
62 0 V
25 -246 R
0 139 V
-31 -139 R
62 0 V
-62 139 R
62 0 V
25 -98 R
0 145 V
-31 -145 R
62 0 V
-62 145 R
62 0 V
25 -107 R
0 145 V
-31 -145 R
62 0 V
-62 145 R
62 0 V
25 -89 R
0 164 V
-31 -164 R
62 0 V
-62 164 R
62 0 V
25 -279 R
0 148 V
-31 -148 R
62 0 V
-62 148 R
62 0 V
25 -109 R
0 159 V
-31 -159 R
62 0 V
-62 159 R
62 0 V
25 -133 R
0 142 V
-31 -142 R
62 0 V
-62 142 R
62 0 V
25 -204 R
0 147 V
-31 -147 R
62 0 V
-62 147 R
62 0 V
stroke 3607 3338 M
25 -174 R
0 167 V
-31 -167 R
62 0 V
-62 167 R
62 0 V
25 -115 R
0 139 V
-31 -139 R
62 0 V
-62 139 R
62 0 V
25 -97 R
0 148 V
-31 -148 R
62 0 V
-62 148 R
62 0 V
25 -19 R
0 136 V
-31 -136 R
62 0 V
-62 136 R
62 0 V
25 -203 R
0 143 V
-31 -143 R
62 0 V
-62 143 R
62 0 V
25 -130 R
0 154 V
-31 -154 R
62 0 V
-62 154 R
62 0 V
25 -125 R
0 152 V
-31 -152 R
62 0 V
-62 152 R
62 0 V
25 -408 R
0 153 V
-31 -153 R
62 0 V
-62 153 R
62 0 V
25 -10 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
25 -114 R
0 158 V
-31 -158 R
62 0 V
-62 158 R
62 0 V
25 -185 R
0 152 V
-31 -152 R
62 0 V
-62 152 R
62 0 V
25 35 R
0 159 V
-31 -159 R
62 0 V
-62 159 R
62 0 V
25 -349 R
0 146 V
-31 -146 R
62 0 V
-62 146 R
62 0 V
25 66 R
0 145 V
-31 -145 R
62 0 V
-62 145 R
62 0 V
25 -287 R
0 154 V
-31 -154 R
62 0 V
-62 154 R
62 0 V
25 -299 R
0 140 V
-31 -140 R
62 0 V
-62 140 R
62 0 V
25 -30 R
0 139 V
-31 -139 R
62 0 V
-62 139 R
62 0 V
25 -90 R
0 143 V
stroke 4584 3482 M
-31 -143 R
62 0 V
-62 143 R
62 0 V
25 7 R
0 156 V
-31 -156 R
62 0 V
-62 156 R
62 0 V
25 -242 R
0 146 V
-31 -146 R
62 0 V
-62 146 R
62 0 V
25 -332 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
25 -97 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
25 -140 R
0 159 V
-31 -159 R
62 0 V
-62 159 R
62 0 V
25 11 R
0 149 V
-31 -149 R
62 0 V
-62 149 R
62 0 V
25 -306 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
25 -50 R
0 144 V
-31 -144 R
62 0 V
-62 144 R
62 0 V
24 -63 R
0 156 V
-31 -156 R
62 0 V
-62 156 R
62 0 V
25 -266 R
0 152 V
-31 -152 R
62 0 V
-62 152 R
62 0 V
25 -92 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
25 -151 R
0 152 V
-31 -152 R
62 0 V
-62 152 R
62 0 V
25 -234 R
0 148 V
-31 -148 R
62 0 V
-62 148 R
62 0 V
25 -208 R
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
25 -75 R
0 152 V
-31 -152 R
62 0 V
-62 152 R
62 0 V
25 -40 R
0 156 V
-31 -156 R
62 0 V
-62 156 R
62 0 V
25 -245 R
0 131 V
-31 -131 R
62 0 V
stroke 5566 3366 M
-62 131 R
62 0 V
25 -180 R
0 144 V
-31 -144 R
62 0 V
-62 144 R
62 0 V
25 -37 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
25 -162 R
0 153 V
-31 -153 R
62 0 V
-62 153 R
62 0 V
25 -53 R
0 139 V
-31 -139 R
62 0 V
-62 139 R
62 0 V
25 -324 R
0 154 V
-31 -154 R
62 0 V
-62 154 R
62 0 V
25 -85 R
0 148 V
-31 -148 R
62 0 V
-62 148 R
62 0 V
25 -201 R
0 135 V
-31 -135 R
62 0 V
-62 135 R
62 0 V
25 -22 R
0 167 V
-31 -167 R
62 0 V
-62 167 R
62 0 V
25 -257 R
0 131 V
-31 -131 R
62 0 V
-62 131 R
62 0 V
1673 2504 CircleF
1729 2652 CircleF
1785 2601 CircleF
1841 2690 CircleF
1897 2719 CircleF
1953 2778 CircleF
2009 2751 CircleF
2065 2848 CircleF
2121 2836 CircleF
2177 2787 CircleF
2233 2848 CircleF
2289 3070 CircleF
2345 3017 CircleF
2401 2950 CircleF
2457 2924 CircleF
2513 3007 CircleF
2569 3108 CircleF
2625 3062 CircleF
2681 3197 CircleF
2737 3098 CircleF
2792 3172 CircleF
2848 3277 CircleF
2904 3284 CircleF
2960 3159 CircleF
3016 3195 CircleF
3072 3265 CircleF
3128 3339 CircleF
3184 3237 CircleF
3240 3281 CircleF
3296 3320 CircleF
3352 3385 CircleF
3408 3262 CircleF
3464 3307 CircleF
3520 3324 CircleF
3576 3265 CircleF
3632 3248 CircleF
3688 3286 CircleF
3744 3332 CircleF
3800 3455 CircleF
3856 3391 CircleF
3912 3410 CircleF
3968 3438 CircleF
4024 3182 CircleF
4080 3324 CircleF
4136 3364 CircleF
4192 3334 CircleF
4248 3525 CircleF
4304 3328 CircleF
4360 3539 CircleF
4416 3402 CircleF
4472 3250 CircleF
4528 3360 CircleF
4584 3410 CircleF
4640 3567 CircleF
4696 3476 CircleF
4752 3292 CircleF
4808 3345 CircleF
4864 3360 CircleF
4920 3525 CircleF
4976 3368 CircleF
5032 3465 CircleF
5087 3552 CircleF
5143 3440 CircleF
5199 3499 CircleF
5255 3499 CircleF
5311 3415 CircleF
5367 3349 CircleF
5423 3419 CircleF
5479 3533 CircleF
5535 3432 CircleF
5591 3389 CircleF
5647 3499 CircleF
5703 3489 CircleF
5759 3582 CircleF
5815 3404 CircleF
5871 3470 CircleF
5927 3410 CircleF
5983 3539 CircleF
6039 3432 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1617 4137 N
0 -3081 V
4590 0 V
0 3081 V
-4590 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
